% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hubviz-package.R, R/hubviz.R
\docType{package}
\name{hubviz}
\alias{hubviz}
\alias{hubviz-package}
\title{hubviz: A novel tool for hub-centric visualization}
\usage{
hubviz(dataset, nsample = nrow(dataset), nitem = ncol(dataset),
  ndim = 2, niter = 30000, nburn = 5000, nthin = 5, nprint = 100,
  jump_theta = 1, jump_w = 0.2, pr_mean_theta = 0,
  pr_sd_theta = 10, pr_mean_w = 0, prior_a = 0.001,
  prior_b = 0.001, option = FALSE, verbose = FALSE, cores = 1)
}
\arguments{
\item{dataset}{Matrix of binary values with n samples and p variables}

\item{nsample}{Number of samples to analyze (default: use all samples)}

\item{nitem}{Number of variables to analyze (default: use all variables)}

\item{ndim}{Dimension of latent position (default: 2)}

\item{niter}{Total number of iterations in MCMC (default: 30000)}

\item{nburn}{Number of burn-in iterations in MCMC (default: 5000)}

\item{nthin}{Thinning number of MCMC (default: 5)}

\item{nprint}{Trace size of MCMC (default: 100)}

\item{jump_theta}{Jump size for the intercept parameter (default: 1.0)}

\item{jump_w}{Jump size for latent space (default: 0.2)}

\item{pr_mean_theta}{Prior mean for the intercept parameter (default: 0.0)}

\item{pr_sd_theta}{Prior Standard deviation for the intercept parameter (default: 10.0)}

\item{pr_mean_w}{Prior mean for latent space (default: 0.0)}

\item{prior_a}{Prior Shape parameter for variance of latent space (default: 0.001)}

\item{prior_b}{Prior Scale parameter for variance of latent space (default: 0.001)}

\item{option}{Logical. If TRUE then print MCMC iteration (default: FALSE)}

\item{verbose}{Logical. If TRUE then return MCMC results (default: FALSE)}

\item{cores}{Number of CPUs to be used for computing (default: 1)}
}
\description{
This package provides funtions for fitting hubviz, a novel tool for hub-centric visualization
}
\examples{
n <- 100
p <- 10
bmat <- matrix( 0, n, p )
for ( j in 1:ncol(bmat) ) {
 bmat[ 1:(10*j), j ] <- 1
}
rownames( bmat ) <- paste( "Sample", 1:n, sep="" )
colnames( bmat ) <- paste( "V", 1:p, sep="" )

# Fit hubviz
nsamp <- nrow( bmat ); nitem <- ncol( bmat )
fit <- hubviz( bmat, nsample = nsamp, nitem = nitem)
fit

# Extraction of results
estimate( fit )

# Hub-centric plot
plot( fit )
}
